{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["pageQuery","IndexPage","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","allMarkdownRemark","edges","map","post","key","node","id","frontmatter","path","title","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-index-js-cf905264d55eba0b4d0a.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\n\r\nconst IndexPage = ({data}) => (\r\n  <Layout>\r\n    <h1>Hi people</h1>\r\n    <p>Welcome to your new Gatsby site.</p>\r\n    <p>Now go build something great.</p>\r\n    <ul>\r\n      <li><Link to=\"/page-2/\">Go to page 2</Link></li>\r\n      <li><Link to=\"/page-3/\">Go to page 3</Link></li>\r\n      <li><Link to=\"/page-4/\">Go to page 4</Link></li>\r\n    </ul>\r\n    <h2>Index</h2>\r\n    <ul>\r\n    {data.allMarkdownRemark.edges.map(post => (\r\n      <li>\r\n        <Link\r\n          key={post.node.id} \r\n          to={post.node.frontmatter.path}\r\n          >{post.node.frontmatter.title}\r\n        </Link>\r\n      </li>\r\n    ))}\r\n    </ul>\r\n  </Layout>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    allMarkdownRemark(\r\n      limit: 10\r\n      sort: { fields: [ frontmatter___date], order: DESC}\r\n      filter: { frontmatter: { published: { eq: true } } }\r\n      ){\r\n      edges{\r\n        node {\r\n          id\r\n          frontmatter{\r\n            title\r\n            path\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <div\r\n    style={{\r\n      background: 'rebeccapurple',\r\n      marginBottom: '1.45rem',\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: '0 auto',\r\n        maxWidth: 960,\r\n        padding: '1.45rem 1.0875rem',\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: 'white',\r\n            textDecoration: 'none',\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport './layout.scss'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            { name: 'description', content: 'Sample' },\r\n            { name: 'keywords', content: 'sample, something' },\r\n          ]}\r\n        >\r\n          <html lang=\"en\" />\r\n        </Helmet>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: '0 auto',\r\n            maxWidth: 960,\r\n            padding: '0px 1.0875rem 1.45rem',\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          {children}\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}